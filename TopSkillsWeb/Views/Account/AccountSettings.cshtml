@model Core.Account.User

<div class="container-xl">
    <input type="file" hidden id="avatart_fileForm" onchange="onShowPreview(event);" accept="image/png, image/jpeg" />
    <div class="card">
        <div class="row g-0">
            <div class="col-12 col-md-3 border-end">
                <div class="card-body">
                    <h4 class="subheader">@Resource.Settings</h4>
                    <div class="list-group list-group-transparent">
                        <a onclick="OnChangeTabSettings(0, event)" class="list-group-item list-group-item-action d-flex align-items-center active">@Resource.Account</a>
                        <a title="В процессе разработки" class="list-group-item list-group-item-action d-flex align-items-center disabled">Мои уведомления</a>
                        <a title="В процессе разработки" class="list-group-item list-group-item-action d-flex align-items-center disabled">Стронние сервисы</a>
                    </div>
                    <h4 class="subheader mt-4">Поддержка</h4>
                    <div class="list-group list-group-transparent">
                        <a onclick="OnChangeTabSettings(3, event)" title="В процессе разработки" class="list-group-item list-group-item-action">Обратная связь</a>
                    </div>
                </div>
            </div>
            <div  id="Tabs" class="col-12 col-md-9 d-flex flex-column">
                @await Html.PartialAsync("Tabs/MyAccountTabs", Model)
            </div>
        </div>
    </div>
</div>
<script src="~/lib/tinymce/tinymce.js" defer></script>
<script type="text/javascript">
    var src = '';

    function onShowPreview(event) {
        src = URL.createObjectURL(event.target.files[0]);
        var avatar_container = document.getElementById('avatar_container');
        avatar_container.style.backgroundImage = 'url(' + src + ')';
    }

    function onSaveAccountChanges() {
        var ValidFields = true;

        var UserName = document.getElementById('userName').value;
        if (UserName == null || UserName == '' || UserName.length < 5) {
            ValidFields = false;
            AlertValidate('Имя пользователя должно иметь более 5 символов!');
        }
        var Email = document.getElementById('Email').value;

        if (ValidFields) {

            if (Email != null || Email != '') {
                let pattern = /^[^ ]+@@[^ ]+\.[a-z]{2,3}$/;
                if (!Email.match(pattern)) {
                    ValidFields = false;
                    AlertValidate('Email введен некорректно!');
                }
                else {
                    // $.get('@Url.Action("IsEmailFree", "Account")', { email: Email }, function (data) {
                    //     if (data != null && data != '') {
                    //         ValidFields = false;
                    //         AlertValidate('Данный Email занят!');
                    //     }
                    // });
                }
            }
            else {
                ValidFields = false;
                AlertValidate('Email не должен быть пустым!');
            }
        }

        if (ValidFields) {
            var model = {};
            model["UserName"] = UserName;
            model["Email"] = Email;
            var fileform = document.getElementById('avatart_fileForm');
            var data = new FormData();

            if (fileform.files.length > 0) {
                data.append("file", fileform.files[0]);
            }
            data.append("Model", JSON.stringify(model))

            $.ajax({
                type: "POST",
                url: '@Url.Action("SaveAccountChanges","Account")',
                contentType: false,
                processData: false,
                data: data,
                success: function (data) {
                    if (data != null && data != '')
                    {
                        AlertValidate(data);
                    }
                    else
                    {
                        AlertSuccess('Выполнено успешно');
                        document.getElementById('avatar_login').style.backgroundImage = 'url(' + src + ')';
                        
                    }
                },
                error: function (xhr) {
                    AlertValidate(xhr.respomseText);
                }
            });

            
        }
    }

    function ResetAvatarConfirmation()
    {
        $.get('@Url.Action("ShowModalResetAvatarConfirmation", "Account")', null, function (data) {
            $('#modal_body').html(data);
            OpenModal();
        });
    }
    function ResetAvatar() {
        $.get('@Url.Action("ResetAvatar", "Account")', null, function (data) {
            if(data!=null && data!='')
            {
                AlertValidate(data);
            }
            else{
                globalCloseModal();
                window.location.href = '@Url.Action("AccountSettings", "Account")';
            }
            
           
        });
    }

    function ShowModalPasswordChange() {
        $.get('@Url.Action("ShowModalResetPassword", "Account")', null, function (data) {
            $('#modal_body').html(data);
            OpenModal();
        });
    }

    function onChangeUserPassword()
    {
        var ValidField = true;
        var Password = document.getElementById('password').value;
        var PasswordConfirmation = document.getElementById('password_confirmation').value;

        if (Password == null || Password == '') 
        {
            ValidField = false;
            AlertValidate('Новый пароль не должен быть пустым!');
        }

        if (ValidField)
        {
            if (PasswordConfirmation == null || PasswordConfirmation == '') {
                ValidField = false;
                AlertValidate('Подтверждение пароля не долженл быть пустым!');
            }
        }

        if (ValidField)
        {
            if (Password.length < 5) {
                ValidField = false;
                AlertValidate('Минимальная длина пароля 5 символов!');
            }
        }

        if (ValidField)
        {
            if (Password != PasswordConfirmation) {
                ValidField = false;
                AlertValidate('Пароль и подтверждение пароля не совпадают!');
            }
        }
        

        if (ValidField)
        {
            $.get('@Url.Action("ChangeUserPassword", "Account")', { Password: Password }, function (data) {
                if (data != null && data != '') {
                    AlertValidate(data);
                }
                else {
                    AlertSuccess('Выполнено успешно');
                }


            });
        }         
    }
    
    function onToggleInput(id)
    {
        var input = document.getElementById(id);
        if(input.type == 'password')
        {
            if (id == 'notEmptySecretKey')
            {
                var btn = document.getElementById('notEmptySecretKey_button');
                btn.innerText = 'Скрыть';
            }
            input.type = 'text';
        }
        else
        {
            if (id == 'notEmptySecretKey') {
                var btn = document.getElementById('notEmptySecretKey_button');
                btn.innerText = 'Показать';
            }
            input.type = 'password';
        }
    }

    function ShowModalSecretKey() {
        $.get('@Url.Action("ShowModalSecretKey", "Account")', null, function (data) {
            $('#modal_body').html(data);
            OpenModal();
        });
    }


    function onAddUpdateSecretPhrase() {
        var ValidField = true;
        var SecretKey = document.getElementById('secretPhrase').value;
        var SecretKeyConfirmation = document.getElementById('secretPhrase_confirmation').value;

        if (SecretKey == null || SecretKey == '') {
            ValidField = false;
            AlertValidate('Secret Phrase не должен быть пустым!');
        }

        if (ValidField) {
            if (SecretKeyConfirmation == null || SecretKeyConfirmation == '') {
                ValidField = false;
                AlertValidate('Подтверждение не долженo быть пустым!');
            }
        }

        if (ValidField) {
            if (SecretKey.length < 5) {
                ValidField = false;
                AlertValidate('Минимальная длина Secret Phrase 5 символов!');
            }
        }

        if (ValidField) {
            if (SecretKey != SecretKeyConfirmation) {
                ValidField = false;
                AlertValidate('Secret Phrase и подтверждение пароля не совпадают!');
            }
        }


        if (ValidField) {
            $.get('@Url.Action("AddUpdateSecretPhrase", "Account")', { SecretPhrase: SecretKey }, function (data) {
                if (data != null && data != '') {
                    AlertValidate(data);
                }
                else {
                    globalCloseModal();
                    window.location.href = '@Url.Action("AccountSettings", "Account")';
                }


            });
        }
    }

    function OnChangeTabSettings(Tabs, e){
        let linkElem = e.currentTarget;
        $('a.list-group-item').removeClass('active');
        $.get('@Url.Action("GetTabsSettings", "Account")', { Tabs: Tabs }, function (data) {
            $('#Tabs').html(data);
            linkElem.classList.add('active');
        });
    }


</script>